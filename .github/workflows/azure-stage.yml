# This workflow will build and push a node.js application to an Azure Web App on every push to the dev branch.
#
# To configure this workflow:
#
# 1. Set up a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE with the value of your Azure publish profile.
#
# 2. Change the values for the AZURE_WEBAPP_NAME, AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables  (below).
#
# For more information on GitHub Actions for Azure, refer to https://github.com/Azure/Actions
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
on:
    push:
        branches:
            - stage
env:
    AZURE_WEBAPP_NAME: adaptivecms # set this to your application's name
    AZURE_WEBAPP_PACKAGE_PATH: "private-templates-service/" # set this to the path to your web app project, defaults to the repository root
    NODE_VERSION: "12.x" # set this to the node version to use

jobs:
    build-test-and-deploy:
        name: Build Test and Deploy
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2.0.0
              with:
                  ref: stage
            - name: Use Node.js ${{ env.NODE_VERSION }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ env.NODE_VERSION }}
            - name: Backend Jest Test
              run: |
                  cd private-templates-service/server
                  npm install
                  npm run test
                  cd ..
            - name: Frontend Jest Test
              run: |
                  cd private-templates-service/adaptivecards-templating-client/typescript
                  npm install
                  npm run build
                  npm link
                  cd ../../client
                  npm link adaptive-templating-service-typescript-node
                  npm install
                  cd src 
                  npm link adaptive-templating-service-typescript-node
                  cd ..
                  npm run test
                  cd ..
            - name: Create production build
              if: success()
              run: |
                  # Build and test the project, then
                  # deploy to Azure Web App.
                  cd private-templates-service/client
                  npm run build:stage --if-present
                  cd ../server
                  npm run deploy
            - name: "Deploy to Azure WebApp"
              if: success()
              uses: azure/webapps-deploy@v1
              with:
                  app-name: ${{ env.AZURE_WEBAPP_NAME }}
                  publish-profile: ${{ secrets.AZURE_ADAPTIVECMS_STAGE }}
                  package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
