
trigger:
  batch: true
  branches:
    include:
    - stage

pr: 
  - stage

variables: 
  azureSubscription: 'Adaptive Cards (47c80630-3d74-4b3e-a2f4-57e6368cd8c6)'
  appName: 'adaptivecms-stage'
pool:
  vmImage: 'ubuntu-latest'

steps:

- task: NodeTool@0 
  inputs:
    versionSpec: '12.x'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
        Write-Host "##vso[task.setvariable variable=ACMS_APP_ID;]$(REACT_APP_ACMS_APP_ID)"
          

- script: |
    cd private-templates-service/server
    npm run init-app
    cd ../client
    npm run build
  displayName: Build App

- script: |
    cd private-templates-service/client
    npm run test
  displayName: Run frontend tests
    
- script: |
    cd private-templates-service/adaptivecards-templating-service
    npm run test
  displayName: Run backend tests

- script: |
    cd private-templates-service/server
    npm run deploy
  displayName: Build backend

- task: ArchiveFiles@2
  displayName: 'Archive the function source code'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/stage'))
  inputs:
    rootFolderOrFile: '$(system.defaultworkingdirectory)/private-templates-service'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/stage'))
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'

- task: AzureWebApp@1
  displayName: 'Azure Web App Deploy'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/stage'))
  inputs:
    azureSubscription: $(azureSubscription)
    appType: webAppLinux
    appName: $(appName)
    package: $(System.ArtifactsDirectory)/**/*.zip