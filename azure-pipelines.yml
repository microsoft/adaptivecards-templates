# https://aka.ms/yaml
# This build copies the templates directory into Azure Blob Storage
# It uses a tool called blobxfer 
# More about blobxfer here: https://blobxfer.readthedocs.io/en/latest/

trigger:
- master

# no PR builds
pr: none

pool:
  vmImage: 'ubuntu-latest'


steps:

- script: |
    cd src
    dotnet build extensions.csproj --output ./bin
    npm install 
    npm run generate
    npm prune --production

- task: ArchiveFiles@2
  displayName: 'Archive the function source code'
  inputs:
    rootFolderOrFile: '$(system.defaultworkingdirectory)/src'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Adaptive Cards (47c80630-3d74-4b3e-a2f4-57e6368cd8c6)'
    appType: 'functionApp'
    WebAppName: 'adaptivecardstemplates'
    packageForLinux: '$(Build.ArtifactStagingDirectory)/**/*.zip'
    enableCustomDeployment: true
    DeploymentType: runFromZip    
    TakeAppOfflineFlag: false
    ExcludeFilesFromAppDataFlag: false
    RenameFilesFlag: false
    

- script: |
    sudo apt-get update
    sudo apt-get install -y build-essential libssl-dev libffi-dev python3-dev python3-pip
    sudo python3 -m pip install --upgrade pip
    sudo pip3 install setuptools wheel
    sudo pip3 install blobxfer
    blobxfer upload --storage-account adaptivecardstemplates --sas "$(storage_sas)" --local-path ./templates --remote-path templates --skip-on-lmt-ge
  displayName: 'Copy templates directory to Blob storage using blobxfer'

